# Generated by Django 5.0.6 on 2025-04-09 04:25

import common.utils
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PostBlog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'blogs',
            },
        ),
        migrations.CreateModel(
            name='PostContactUs',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('car', models.CharField(blank=True, max_length=30, null=True)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'contact_us',
            },
        ),
        migrations.CreateModel(
            name='PostLandingPageImages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('title_data', models.CharField(blank=True, max_length=100)),
                ('subtitle', models.CharField(max_length=400)),
                ('section', models.IntegerField(blank=True, default=0)),
                ('tag', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='landing_pages_images/')),
                ('web_image', models.ImageField(blank=True, null=True, upload_to='web_landing_pages_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'landing_pages_images',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.CharField(blank=True, max_length=120, null=True)),
                ('rating', models.CharField(blank=True, max_length=120, null=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[(1, 'Approved'), (0, 'Pending'), (2, 'Declined')], default='0', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='PostSubscribers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'subscribers',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]', message='name must be alphabet')])),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]', message='name must be alphabet')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('role', models.CharField(blank=True, max_length=20, null=True)),
                ('street_address_1', models.CharField(blank=True, max_length=250, null=True)),
                ('street_address_2', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=5, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_img/', validators=[common.utils.validate_file_extension])),
                ('social_user_image', models.CharField(blank=True, max_length=512, null=True)),
                ('provider', models.CharField(blank=True, default='genz40', max_length=64, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_block', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_number_verified', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('last_login', models.DateTimeField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'custom_users',
            },
        ),
        migrations.CreateModel(
            name='PostCommunity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'community',
            },
        ),
        migrations.CreateModel(
            name='PostCommunityJoiners',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_joiners', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'community_joiners',
            },
        ),
        migrations.CreateModel(
            name='PostMeta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('meta_title', models.CharField(max_length=70)),
                ('meta_keywords', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('page_title', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'meta_datas',
            },
        ),
        migrations.CreateModel(
            name='PostNavItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('estimated_delivery', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='backend.postnavitem')),
            ],
            options={
                'db_table': 'nav_items',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='images/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
                ('nav_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='backend.postnavitem')),
            ],
        ),
        migrations.CreateModel(
            name='CarConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exterior_color', models.CharField(blank=True, max_length=50, null=True)),
                ('wheel_type', models.CharField(blank=True, max_length=50, null=True)),
                ('wheel_color', models.CharField(blank=True, max_length=50, null=True)),
                ('grille_style', models.CharField(blank=True, max_length=50, null=True)),
                ('roof_type', models.CharField(blank=True, max_length=50, null=True)),
                ('mirror_style', models.CharField(blank=True, max_length=50, null=True)),
                ('lighting_package', models.CharField(blank=True, max_length=50, null=True)),
                ('decals', models.CharField(blank=True, max_length=100, null=True)),
                ('upholstery_material', models.CharField(blank=True, max_length=50, null=True)),
                ('interior_color', models.CharField(blank=True, max_length=50, null=True)),
                ('seat_type', models.CharField(blank=True, max_length=50, null=True)),
                ('dashboard_trim', models.CharField(blank=True, max_length=50, null=True)),
                ('steering_wheel', models.CharField(blank=True, max_length=50, null=True)),
                ('engine_type', models.CharField(blank=True, max_length=50, null=True)),
                ('transmission', models.CharField(blank=True, max_length=50, null=True)),
                ('drivetrain', models.CharField(blank=True, max_length=50, null=True)),
                ('suspension', models.CharField(blank=True, max_length=50, null=True)),
                ('exhaust_system', models.CharField(blank=True, max_length=50, null=True)),
                ('infotainment_system', models.CharField(blank=True, max_length=50, null=True)),
                ('sound_system', models.CharField(blank=True, max_length=50, null=True)),
                ('heads_up_display', models.BooleanField(default=False)),
                ('connectivity_package', models.CharField(blank=True, max_length=50, null=True)),
                ('autonomous_driving_level', models.CharField(blank=True, max_length=20, null=True)),
                ('parking_assist', models.BooleanField(default=False)),
                ('blind_spot_monitoring', models.BooleanField(default=False)),
                ('night_vision', models.BooleanField(default=False)),
                ('luxury_package', models.BooleanField(default=False)),
                ('sport_package', models.BooleanField(default=False)),
                ('winter_package', models.BooleanField(default=False)),
                ('offroad_package', models.BooleanField(default=False)),
                ('towing_hitch', models.BooleanField(default=False)),
                ('roof_rack', models.BooleanField(default=False)),
                ('base_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('exterior_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('interior_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('performance_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tech_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('package_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_saved', models.BooleanField(default=False)),
                ('is_ordered', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_configurations', to=settings.AUTH_USER_MODEL)),
                ('car_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='backend.postnavitem')),
            ],
            options={
                'db_table': 'car_configurations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('amount_reserve', models.IntegerField(blank=True, default=0)),
                ('amount_due', models.IntegerField(blank=True, default=0)),
                ('estimated_delivery', models.DateTimeField(default=django.utils.timezone.now)),
                ('offer_valid', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='vehicle_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('nav_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='backend.postnavitem')),
            ],
            options={
                'db_table': 'packages',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostCharging',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('charging_name', models.CharField(max_length=70)),
                ('charging_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='charging_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charging_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'charging',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostAccessories',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accessories_name', models.CharField(max_length=70)),
                ('accessories_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='accessories_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessories_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'accessories',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPackageDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'package_details',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPackageFeature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('value', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'package_features',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPaint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('paint_name', models.CharField(max_length=70)),
                ('paint_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='paint_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paint_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'paint',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parts_name', models.CharField(max_length=70)),
                ('parts_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='parts_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='part_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'parts',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rn_number', models.CharField(blank=True, max_length=64, null=True)),
                ('stripe_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(blank=True, default='usd', max_length=10, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('package_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='PostOrderStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('status_updated_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_statuses', to='backend.postpayment')),
            ],
            options={
                'db_table': 'order_status',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostSubStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('position', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_statuses', to='backend.postorderstatus')),
            ],
            options={
                'db_table': 'order_sub_status',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostWheels',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wheel_name', models.CharField(max_length=70)),
                ('wheel_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('wheel_amount', models.IntegerField(blank=True, default=0)),
                ('wheel_size', models.CharField(blank=True, default=0, max_length=64)),
                ('wheel_color', models.CharField(blank=True, default=0, max_length=64)),
                ('wheel_offset', models.CharField(blank=True, default=0, max_length=64)),
                ('image', models.ImageField(blank=True, null=True, upload_to='wheels_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheels_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'wheels',
                'ordering': ['position'],
            },
        ),
    ]
