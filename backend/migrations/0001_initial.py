# Generated by Django 5.0.6 on 2024-07-08 20:55

import common.utils
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PostBlog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'blogs',
            },
        ),
        migrations.CreateModel(
            name='PostReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.CharField(blank=True, max_length=120, null=True)),
                ('rating', models.CharField(blank=True, max_length=120, null=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[(1, 'Approved'), (0, 'Pending'), (2, 'Declined')], default='0', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]', message='name must be alphabet')])),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z]', message='name must be alphabet')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, error_messages={'unique': 'A user with this Phone Number already Registered'}, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered Up to 10 digits allowed', regex='^\\+?1?\\d{10,10}$')])),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User'), ('business', 'Business')], max_length=20)),
                ('street_address_1', models.CharField(blank=True, max_length=250, null=True)),
                ('street_address_2', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=5, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_img/', validators=[common.utils.validate_file_extension])),
                ('social_user_image', models.CharField(blank=True, max_length=512, null=True)),
                ('provider', models.CharField(blank=True, default='genz40', max_length=64, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_block', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_number_verified', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'custom_users',
            },
        ),
        migrations.CreateModel(
            name='PostMeta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('meta_title', models.CharField(max_length=70)),
                ('meta_keywords', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('page_title', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'meta_datas',
            },
        ),
        migrations.CreateModel(
            name='PostNavItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('estimated_delivery', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='backend.postnavitem')),
            ],
            options={
                'db_table': 'nav_items',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='images/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
                ('nav_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='backend.postnavitem')),
            ],
        ),
        migrations.CreateModel(
            name='PostPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('amount_reserve', models.IntegerField(blank=True, default=0)),
                ('amount_due', models.IntegerField(blank=True, default=0)),
                ('estimated_delivery', models.DateTimeField(default=django.utils.timezone.now)),
                ('offer_valid', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='vehicle_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('nav_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='backend.postnavitem')),
            ],
            options={
                'db_table': 'packages',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostCharging',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('charging_name', models.CharField(max_length=70)),
                ('charging_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='charging_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charging_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'charging',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostAccessories',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accessories_name', models.CharField(max_length=70)),
                ('accessories_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='accessories_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessories_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'accessories',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPackageDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'package_details',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPackageFeature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('value', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'package_features',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPaint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('paint_name', models.CharField(max_length=70)),
                ('paint_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='paint_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paint_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'paint',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostPart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parts_name', models.CharField(max_length=70)),
                ('parts_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('amount', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='parts_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='part_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'parts',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='PostWheels',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wheel_name', models.CharField(max_length=70)),
                ('wheel_desc', models.TextField(blank=True, max_length=170, null=True)),
                ('wheel_amount', models.IntegerField(blank=True, default=0)),
                ('wheel_size', models.CharField(blank=True, default=0, max_length=64)),
                ('wheel_color', models.CharField(blank=True, default=0, max_length=64)),
                ('wheel_offset', models.CharField(blank=True, default=0, max_length=64)),
                ('image', models.ImageField(blank=True, null=True, upload_to='wheels_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheels_details', to='backend.postpackage')),
            ],
            options={
                'db_table': 'wheels',
                'ordering': ['position'],
            },
        ),
    ]
